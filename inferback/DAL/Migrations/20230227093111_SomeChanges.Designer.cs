// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using inferback.DAL;

#nullable disable

namespace inferback.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230227093111_SomeChanges")]
    partial class SomeChanges
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("inferback.Domain.Entity.Description", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("bug_type")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "bug_type");

                    b.Property<int>("column")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "column");

                    b.Property<string>("file")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "file");

                    b.Property<int>("line")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "line");

                    b.Property<string>("qualifier")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "qualifier");

                    b.Property<int>("reportId")
                        .HasColumnType("int");

                    b.Property<string>("severity")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "severity");

                    b.HasKey("id");

                    b.HasIndex("reportId");

                    b.ToTable("Descriptions");
                });

            modelBuilder.Entity("inferback.Domain.Entity.Project", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("name")
                        .HasColumnType("longtext");

                    b.Property<string>("path")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("inferback.Domain.Entity.Report", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("name")
                        .HasColumnType("longtext");

                    b.Property<int>("projectId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("projectId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("inferback.Domain.Entity.Description", b =>
                {
                    b.HasOne("inferback.Domain.Entity.Report", "report")
                        .WithMany("descriptions")
                        .HasForeignKey("reportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("report");
                });

            modelBuilder.Entity("inferback.Domain.Entity.Report", b =>
                {
                    b.HasOne("inferback.Domain.Entity.Project", "project")
                        .WithMany("reports")
                        .HasForeignKey("projectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("project");
                });

            modelBuilder.Entity("inferback.Domain.Entity.Project", b =>
                {
                    b.Navigation("reports");
                });

            modelBuilder.Entity("inferback.Domain.Entity.Report", b =>
                {
                    b.Navigation("descriptions");
                });
#pragma warning restore 612, 618
        }
    }
}
